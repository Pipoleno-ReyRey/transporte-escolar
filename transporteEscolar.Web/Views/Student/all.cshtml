<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lista de Estudiantes</title>
    <style>
        body {
            background: linear-gradient(to right, #00c6ff, #0072ff);
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }

        #header {
            background-color: #4CAF50;
            color: white;
            padding: 10px;
            text-align: center;
            border-radius: 5px 5px 0 0;
        }

        #students-list {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            margin: 20px;
            padding: 20px;
        }

        .student-card {
            background-color: #f9f9f9;
            border-radius: 10px;
            padding: 20px;
            margin: 15px;
            width: 280px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }

        .student-card:hover {
            transform: scale(1.05);
        }

        .student-card h3 {
            color: #333;
            margin-bottom: 10px;
        }

        .student-card p {
            color: #666;
        }

        .student-card .button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px;
            cursor: pointer;
            text-decoration: none;
            border-radius: 5px;
            margin-top: 10px;
        }

        .student-card .button:hover {
            background-color: #45a049;
        }

        .delete-button {
            background-color: #f44336;
            color: white;
            border: none;
            padding: 8px 5px;
            cursor: pointer;
            size: 10px;
            border-radius: 5px;
            margin-top: 10px;
        }

        .delete-button:hover {
            background-color: #e53935;
        }

        #back-to-home {
            display: block;
            width: 150px;
            margin: 20px auto;
            text-align: center;
            background-color: #008CBA;
            color: white;
            padding: 10px 20px;
            text-decoration: none;
            border-radius: 5px;
            font-size: 16px;
        }

        #back-to-home:hover {
            background-color: #007bb5;
        }

        .form-container {
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin: 20px auto;
            padding: 20px;
            max-width: 400px;
            text-align: center;
        }

        .form-container h2 {
            margin-bottom: 20px;
            color: #4CAF50;
        }

        input, button {
            width: 90%;
            margin-bottom: 15px;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ccc;
        }

        button {
            background-color: #4CAF50;
            color: white;
            border: none;
            cursor: pointer;
            font-size: 16px;
        }

        button:hover {
            background-color: #45a049;
        }

        .error-message {
            color: red;
            font-weight: bold;
            text-align: center;
            margin-top: 20px;
        }
    </style>
</head>
<body>

    <div id="header">
        <h1>Lista de Estudiantes</h1>
    </div>

    <div class="form-container">
        <h2>Crear Estudiante</h2>
        <input type="text" id="name" name="name" placeholder="Nombre" required>
        <input type="text" id="address" name="address" placeholder="Dirección" required>
        <input type="email" id="email" name="email" placeholder="Email" required>
        <input type="text" id="telefono" name="telefono" placeholder="Teléfono" required>
        <input type="number" id="wayId" name="wayId" placeholder="ID de Ruta" required>
        <button onclick="addStudent()">Crear Estudiante</button>
    </div>

    <div id="students-list"></div>

    <a id="back-to-home" href="/Home">Volver a Inicio</a>

    <p id="error-message" class="error-message" style="display: none;"></p>

    <script>
        function studentId(studentId) {
            localStorage.setItem('studentId', studentId);
        }

        async function loadStudents() {
            const errorMessage = document.getElementById('error-message');
            const studentsListDiv = document.getElementById('students-list');

            try {
                const response = await fetch('/api/Student');

                if (!response.ok) {
                    const errorText = await response.text();
                    throw new Error(errorText || `Error: ${response.status} ${response.statusText}`);
                }

                const students = await response.json();
                studentsListDiv.innerHTML = '';
                errorMessage.style.display = 'none';

                if (students.length === 0) {
                    studentsListDiv.innerHTML = '<p>No hay estudiantes disponibles.</p>';
                    return;
                }

                students.forEach(student => {
                    const studentElement = document.createElement('div');
                    studentElement.classList.add('student-card');
                    studentElement.innerHTML = `
                        <h3>${student.id} --- ${student.name}</h3>
                        <p><strong>Dirección:</strong> ${student.address}</p>
                        <p><strong>Email:</strong> ${student.email}</p>
                        <p><strong>Teléfono:</strong> ${student.telefono}</p>
                        <p><strong>Deuda:</strong> ${student.debt}</p>
                        <p><strong>Ruta:</strong> ${student.wayId}</p>
                        <a href="/Student/Pays" class="button" onclick="studentId(${student.id})">Ver pagos</a>
                        <a href="/Student/Edit" class="button" onclick="studentId(${student.id})">Editar</a>
                        <button class="delete-button" onclick="deleteStudent(${student.id})">Eliminar</button>
                    `;
                    studentsListDiv.appendChild(studentElement);
                });
            } catch (error) {
                errorMessage.textContent = error.message;
                errorMessage.style.display = 'block';
            }
        }

        async function deleteStudent(studentId) {
            const errorMessage = document.getElementById('error-message');
            try {
                const response = await fetch(`/api/Student/${studentId}`, {
                    method: 'DELETE'
                });

                if (!response.ok) {
                    const errorText = await response.text();
                    throw new Error(errorText || `Error: ${response.status} ${response.statusText}`);
                }

                loadStudents();
            } catch (error) {
                errorMessage.textContent = error.message;
                errorMessage.style.display = 'block';
            }
        }

        async function addStudent() {
            const studentData = {
                name: document.getElementById('name').value,
                address: document.getElementById('address').value,
                email: document.getElementById('email').value,
                telefono: document.getElementById('telefono').value,
                debt: 0,
                wayId: document.getElementById('wayId').value
            };

            const errorMessage = document.getElementById('error-message');

            try {
                const response = await fetch('/api/Student', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(studentData)
                });

                if (!response.ok) {
                    const errorText = await response.text();
                    throw new Error(errorText || `Error: ${response.status} ${response.statusText}`);
                }

                loadStudents();
            } catch (error) {
                errorMessage.textContent = error.message;
                errorMessage.style.display = 'block';
            }
        }

        loadStudents();
    </script>

</body>
</html>
